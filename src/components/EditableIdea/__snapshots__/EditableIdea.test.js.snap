// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: EditableIdea renders correctly (with inputs) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditableIdea
    edit={false}
    editIdea={[Function]}
    editedIdea={
        Object {
            "id": false,
          }
    }
    focusedIdea={null}
    idea={
        Object {
            "body": "Test body",
            "id": "ABC123",
            "title": "Test",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="title"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
>
          <h1>
                    Test
          </h1>
</div>,
        <div
          className="body"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
>
          <p>
                    Test body
          </p>
</div>,
        <div
          className="delete"
>
          <button
                    onClick={[Function]}
                    type="button"
          >
                    <img
                              alt="Delete"
                              src="trash-icon.svg"
                    />
                    Delete
          </button>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Test
</h1>,
          "className": "title",
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Test",
          },
          "ref": null,
          "rendered": "Test",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Test body
</p>,
          "className": "body",
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Test body",
          },
          "ref": null,
          "rendered": "Test body",
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            onClick={[Function]}
            type="button"
>
            <img
                        alt="Delete"
                        src="trash-icon.svg"
            />
            Delete
</button>,
          "className": "delete",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="Delete"
                src="trash-icon.svg"
/>,
              "Delete",
            ],
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Delete",
                "src": "trash-icon.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "Delete",
          ],
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="title"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            <h1>
                        Test
            </h1>
</div>,
          <div
            className="body"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            <p>
                        Test body
            </p>
</div>,
          <div
            className="delete"
>
            <button
                        onClick={[Function]}
                        type="button"
            >
                        <img
                                    alt="Delete"
                                    src="trash-icon.svg"
                        />
                        Delete
            </button>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              Test
</h1>,
            "className": "title",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test",
            },
            "ref": null,
            "rendered": "Test",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Test body
</p>,
            "className": "body",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test body",
            },
            "ref": null,
            "rendered": "Test body",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              onClick={[Function]}
              type="button"
>
              <img
                            alt="Delete"
                            src="trash-icon.svg"
              />
              Delete
</button>,
            "className": "delete",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="Delete"
                  src="trash-icon.svg"
/>,
                "Delete",
              ],
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Delete",
                  "src": "trash-icon.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "Delete",
            ],
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Component: EditableIdea renders correctly (without inputs) 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditableIdea
    edit={false}
    editIdea={[Function]}
    editedIdea={
        Object {
            "id": false,
          }
    }
    focusedIdea={null}
    idea={
        Object {
            "body": "Test body",
            "id": "ABC123",
            "title": "Test",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="title"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
>
          <h1>
                    Test
          </h1>
</div>,
        <div
          className="body"
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
>
          <p>
                    Test body
          </p>
</div>,
        <div
          className="delete"
>
          <button
                    onClick={[Function]}
                    type="button"
          >
                    <img
                              alt="Delete"
                              src="trash-icon.svg"
                    />
                    Delete
          </button>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Test
</h1>,
          "className": "title",
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Test",
          },
          "ref": null,
          "rendered": "Test",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Test body
</p>,
          "className": "body",
          "onMouseEnter": [Function],
          "onMouseLeave": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Test body",
          },
          "ref": null,
          "rendered": "Test body",
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            onClick={[Function]}
            type="button"
>
            <img
                        alt="Delete"
                        src="trash-icon.svg"
            />
            Delete
</button>,
          "className": "delete",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="Delete"
                src="trash-icon.svg"
/>,
              "Delete",
            ],
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Delete",
                "src": "trash-icon.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "Delete",
          ],
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="title"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            <h1>
                        Test
            </h1>
</div>,
          <div
            className="body"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
>
            <p>
                        Test body
            </p>
</div>,
          <div
            className="delete"
>
            <button
                        onClick={[Function]}
                        type="button"
            >
                        <img
                                    alt="Delete"
                                    src="trash-icon.svg"
                        />
                        Delete
            </button>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              Test
</h1>,
            "className": "title",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test",
            },
            "ref": null,
            "rendered": "Test",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Test body
</p>,
            "className": "body",
            "onMouseEnter": [Function],
            "onMouseLeave": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Test body",
            },
            "ref": null,
            "rendered": "Test body",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              onClick={[Function]}
              type="button"
>
              <img
                            alt="Delete"
                            src="trash-icon.svg"
              />
              Delete
</button>,
            "className": "delete",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="Delete"
                  src="trash-icon.svg"
/>,
                "Delete",
              ],
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Delete",
                  "src": "trash-icon.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "Delete",
            ],
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
